# yaml-language-server: $schema=https://golangci-lint.run/jsonschema/golangci.jsonschema.json
# golangci-lint configuration for github.com/ralvarezdev/uru-mobiles-recipes-api
# Based on v2.5.0 best practices
# Last updated: 2025-10-21

version: "2"

run:
  timeout: 5m
  concurrency: 0  # Auto-detect CPU cores
  tests: true
  modules-download-mode: readonly
  go: '1.25.1'  # Match your project's Go version
  relative-path-mode: gomod

output:
  formats:
    text:
      path: stdout
      print-linter-name: true
      colors: true
  sort-order:
    - severity
    - linter
    - file
  show-stats: true

formatters:
  enable:
    - goimports
    - golines
  
  settings:
    goimports:
      local-prefixes:
        - github.com/ralvarezdev/uru-mobiles-recipes-api
    
    golines:
      max-len: 120
      shorten-comments: true
  
  exclusions:
    generated: lax
    paths:
      - "vendor/"
      - "third_party/"

linters:
  enable:
    # Essential Linters
    - govet
    - staticcheck
    - unused
    - goconst
    - godoclint
    - sloglint
    - misspell
    
    # Security Linters
    - gosec
    - bidichk
    
    # Resource Management
    - bodyclose
    - sqlclosecheck
    - rowserrcheck
    
    # Error Handling Linters
    - errorlint
    - errcheck
    - nilerr
    - nilnil
    
    # Code Quality
    - dupl
    - nestif
    - ineffassign
    - revive
    - gocritic
    - unconvert
    - wastedassign
    - usestdlibvars
    
    # Context & Concurrency
    - contextcheck
    - noctx
    
    # OPTIONAL - Testing (if using testify)
    # - testifylint
    # - thelper

  settings:
    govet:
      enable:
        - shadow
        # - fieldalignment  # Enable for performance-critical code
      settings:
        shadow:
          strict: true
    
    errcheck:
      check-type-assertions: true
      check-blank: true
      exclude-functions:
        - io.Copy(*bytes.Buffer)
        - io.Copy(os.Stdout)
        - (*net/http.ResponseWriter).Write
    
    staticcheck:
      checks:
        - "all"
        - "-SA1019"  # Deprecation warnings (noisy during refactoring)
        - "-ST1000"  # Package comment requirements
        - "-ST1003"  # Underscore naming (conflicts with protobuf)
        - "-ST1016"  # Receiver naming rules
    
    goconst:
      min-len: 3
      min-occurrences: 3
      ignore-string-values:
        - 'http.*'
        - '^test.*'
        - '.*\.proto$'
    
    godoclint:
      default: basic
      disable:
        - require-pkg-doc
    
    sloglint:
      no-global: "all"
      static-msg: true
      key-naming-case: "snake"
      forbidden-keys:
        - time
        - level
        - msg
        - source
    
    misspell:
      locale: US
      mode: restricted
      ignore-rules:
        - referer
        - kubernetes
        - grpc
        - protobuf
    
    dupl:
      threshold: 200
    
    nestif:
      min-complexity: 5
    
    nilnil:
      only-two: true
      detect-opposite: true
    
    gosec:
      excludes:
        - G104  # Duplicate of errcheck
      includes:
        - G201  # SQL injection
        - G202  # SQL injection
        - G204  # Command injection
        - G301  # File permissions
        - G302  # File permissions
        - G304  # File inclusion
        - G401  # Weak crypto
        - G402  # TLS InsecureSkipVerify
    
    errorlint:
      errorf: true
      asserts: true
      comparison: true
    
    revive:
      rules:
        # Error handling
        - name: error-return
        - name: error-strings
        - name: error-naming
        
        # Code quality
        - name: if-return
        - name: increment-decrement
        - name: indent-error-flow
        - name: superfluous-else
        - name: unreachable-code
        
        # Style
        - name: var-naming
        - name: range
        - name: receiver-naming
        - name: blank-imports
        - name: context-as-argument
        - name: dot-imports
        - name: empty-block
        
        # Disable noisy rules
        - name: exported
          disabled: true
        - name: package-comments
          disabled: true
        - name: unused-parameter
          disabled: true
    
    gocritic:
      enabled-tags:
        - diagnostic
        - style
        - performance
      disabled-checks:
        - commentFormatting
        - whyNoLint
    
  exclusions:
    warn-unused: true
      
    presets:
      - common-false-positives
      - std-error-handling
      
    rules:
      # Test file exclusions
      - path: '_test\.go'
        linters:
          - dupl
          - errcheck
          - nestif
          - goconst
          - gosec
          - funlen
          - gocyclo
        
      # Generated code
      - path: '\.pb\.go$'
        linters:
          - all
        
      - path: 'mock_.+\.go$'
        linters:
          - all
          
      # Long lines in go:generate
      - linters:
          - lll
        source: '^//go:generate '
        
      # SQL linter false positives for repository pattern
      - text: "Rows/Stmt was not closed"
        path: _repository\.go$
        linters:
          - sqlclosecheck
  
issues:
  max-issues-per-linter: 0
  max-same-issues: 50
  uniq-by-line: true
    
  # For gradual adoption on legacy codebases
  # new-from-rev: HEAD
  # new-from-merge-base: main
    
severity:
  default: error
  
  rules:
    # Informational linters
    - linters:
        - dupl
        - goconst
      severity: info
    
    # Security linters use their own severity
    - linters:
        - gosec
      severity: "@linter"